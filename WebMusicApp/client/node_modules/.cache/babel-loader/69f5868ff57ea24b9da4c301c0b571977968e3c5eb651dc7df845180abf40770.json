{"ast":null,"code":"var _jsxFileName = \"D:\\\\Curse\\\\WebMusicApp\\\\client\\\\src\\\\components\\\\DashboardNewSong.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { getStorage, ref, getDownloadURL, uploadBytesResumable, deleteObject } from \"firebase/storage\";\nimport { motion } from \"framer-motion\";\nimport { BiCloudUpload } from \"react-icons/bi\";\nimport { MdDelete } from \"react-icons/md\";\n\n//import { storage } from \"../config/firebase.config\";\nimport { useStateValue } from \"../context/StateProvider\";\nimport { getAllAlbums, getAllArtists, getAllSongs, saveNewAlbum, saveNewArtist, saveNewSong } from \"../api/index\";\nimport { actionType } from \"../context/reducer\";\nimport AlertSuccess from \"./AlertSuccess\";\nimport AlertError from \"./AlertError\";\nimport FilterButton from \"./FilterButton\";\nimport { genreFilters } from \"../utils/supportFunctions\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DashboardNewSong = () => {\n  _s();\n  const [songName, setSongName] = useState(\"\");\n  const [isImageLoading, setIsImageLoading] = useState(false);\n  const [{\n    allArtists,\n    allAlbums\n  }, dispatch] = useStateValue();\n  useEffect(() => {\n    if (!allArtists) {\n      getAllArtists().then(data => {\n        dispatch({\n          type: actionType.SET_ALL_ARTISTS,\n          allArtists: data.data\n        });\n      });\n    }\n    if (!allAlbums) {\n      getAllAlbums().then(data => {\n        dispatch({\n          type: actionType.SET_ALL_ALBUMS,\n          allAlbums: data.data\n        });\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col  items-center justify-center p-4 border border-gray-300 rounded gap-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Type the song: \",\n      className: \"w-full p-2 rounded-md text-base font-semibold text-textColor outline-none shadow-sm\\r border border-gray-300 bg-transparent\",\n      onChange: event => setSongName(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \" w-full flex flex-wrap items-center justify-between gap-4\",\n      children: [/*#__PURE__*/_jsxDEV(FilterButton, {\n        filterData: allArtists,\n        flag: \"Artists\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FilterButton, {\n        filterData: allAlbums,\n        flag: \"Albums\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FilterButton, {\n        filterData: genreFilters,\n        flag: \"Genres\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-between gap-2 w-full flex-wrap\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-card  backdrop-blur-md w-full lg:w-300 h-300 rounded-md border-2 border-dotted border-gray-300 cursor-pointer\",\n        children: isImageLoading && /*#__PURE__*/_jsxDEV(PictureLoader, {\n          progress: 10.454\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 30\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(DashboardNewSong, \"w/a+Rky+ut6xf068yUUJq1AfYmY=\", false, function () {\n  return [useStateValue];\n});\n_c = DashboardNewSong;\nexport const PictureLoader = ({\n  progress\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full h-full flex flex-col items-center justify-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-xl font-semibold text-textColor\",\n      children: Math.round(progress) > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: `${Math.round(progress)}`\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-20 h-20 min-with-[40px] bg-red-600 animate-ping rounded-full flex items-center \\r justify-center relative\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \" absolute inset-0 rounded-full bg-red-600 blur-xl\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n};\n_c2 = PictureLoader;\nexport default DashboardNewSong;\nvar _c, _c2;\n$RefreshReg$(_c, \"DashboardNewSong\");\n$RefreshReg$(_c2, \"PictureLoader\");","map":{"version":3,"names":["React","useEffect","useRef","useState","getStorage","ref","getDownloadURL","uploadBytesResumable","deleteObject","motion","BiCloudUpload","MdDelete","useStateValue","getAllAlbums","getAllArtists","getAllSongs","saveNewAlbum","saveNewArtist","saveNewSong","actionType","AlertSuccess","AlertError","FilterButton","genreFilters","jsxDEV","_jsxDEV","Fragment","_Fragment","DashboardNewSong","_s","songName","setSongName","isImageLoading","setIsImageLoading","allArtists","allAlbums","dispatch","then","data","type","SET_ALL_ARTISTS","SET_ALL_ALBUMS","className","children","placeholder","onChange","event","target","value","fileName","_jsxFileName","lineNumber","columnNumber","filterData","flag","PictureLoader","progress","_c","Math","round","_c2","$RefreshReg$"],"sources":["D:/Curse/WebMusicApp/client/src/components/DashboardNewSong.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  getStorage,\r\n  ref,\r\n  getDownloadURL,\r\n  uploadBytesResumable,\r\n  deleteObject,\r\n} from \"firebase/storage\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nimport { BiCloudUpload } from \"react-icons/bi\";\r\nimport { MdDelete } from \"react-icons/md\";\r\n\r\n//import { storage } from \"../config/firebase.config\";\r\nimport { useStateValue } from \"../context/StateProvider\";\r\nimport {\r\n  getAllAlbums,\r\n  getAllArtists,\r\n  getAllSongs,\r\n  saveNewAlbum,\r\n  saveNewArtist,\r\n  saveNewSong,\r\n} from \"../api/index\";\r\nimport { actionType } from \"../context/reducer\";\r\nimport AlertSuccess from \"./AlertSuccess\";\r\nimport AlertError from \"./AlertError\";\r\nimport FilterButton from \"./FilterButton\";\r\nimport { genreFilters } from \"../utils/supportFunctions\";\r\n\r\nconst DashboardNewSong = () => {\r\n\r\n  const [songName, setSongName] = useState(\"\")\r\n  const [isImageLoading, setIsImageLoading] = useState(false)\r\n  const [{ allArtists, allAlbums }, dispatch] = useStateValue();\r\n\r\n\r\n  useEffect(() => {\r\n    if (!allArtists) {\r\n      getAllArtists().then((data) => {\r\n        dispatch({\r\n          type: actionType.SET_ALL_ARTISTS,\r\n          allArtists: data.data,\r\n        });\r\n      });\r\n    }\r\n\r\n    if (!allAlbums) {\r\n      getAllAlbums().then((data) => {\r\n        dispatch({\r\n          type: actionType.SET_ALL_ALBUMS,\r\n          allAlbums: data.data,\r\n        });\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className='flex flex-col  items-center justify-center p-4 border border-gray-300 rounded gap-4'>\r\n      <input type=\"text\" placeholder=\"Type the song: \"\r\n        className=\"w-full p-2 rounded-md text-base font-semibold text-textColor outline-none shadow-sm\r\n       border border-gray-300 bg-transparent\"\r\n        onChange={(event) => setSongName(event.target.value)} />\r\n\r\n      <div className=\" w-full flex flex-wrap items-center justify-between gap-4\">\r\n        <FilterButton filterData={allArtists} flag={\"Artists\"} />\r\n        <FilterButton filterData={allAlbums} flag={\"Albums\"} />\r\n        <FilterButton filterData={genreFilters} flag={\"Genres\"} />\r\n      </div>\r\n\r\n      <div className=\"flex items-center justify-between gap-2 w-full flex-wrap\">\r\n        <div className=\"bg-card  backdrop-blur-md w-full lg:w-300 h-300 rounded-md border-2 border-dotted border-gray-300 cursor-pointer\">\r\n          {isImageLoading && <PictureLoader progress={10.454} />}\r\n          {/* {!isImageLoading && (\r\n            <>\r\n              {!songImageUrl ? (\r\n                <ImageUploader\r\n                  setImageURL={setSongImageUrl}\r\n                  setAlert={setSetAlert}\r\n                  alertMsg={setAlertMsg}\r\n                  isLoading={setIsImageLoading}\r\n                  setProgress={setUploadProgress}\r\n                  isImage={true}\r\n                />\r\n              ) : (\r\n                <div className=\"relative w-full h-full overflow-hidden rounded-md\">\r\n                  <img\r\n                    src={songImageUrl}\r\n                    alt=\"uploaded image\"\r\n                    className=\"w-full h-full object-cover\"\r\n                  />\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"absolute bottom-3 right-3 p-3 rounded-full bg-red-500 text-xl cursor-pointer outline-none hover:shadow-md  duration-500 transition-all ease-in-out\"\r\n                    onClick={() => {\r\n                      deleteImageObject(songImageUrl, \"image\");\r\n                    }}\r\n                  >\r\n                    <MdDelete className=\"text-white\" />\r\n                  </button>\r\n                </div>\r\n              )}\r\n            </>\r\n          )} */}\r\n        </div>\r\n\r\n        {/* <div className=\"bg-card  backdrop-blur-md w-full lg:w-300 h-300 rounded-md border-2 border-dotted border-gray-300 cursor-pointer\">\r\n          {isAudioLoading && <PictureLoader progress={uploadProgress} />}\r\n          {!isAudioLoading && (\r\n            <>\r\n              {!audioAsset ? (\r\n                <ImageUploader\r\n                  setImageURL={setAudioAsset}\r\n                  setAlert={setSetAlert}\r\n                  alertMsg={setAlertMsg}\r\n                  isLoading={setIsAudioLoading}\r\n                  setProgress={setUploadProgress}\r\n                  isImage={false}\r\n                />\r\n              ) : (\r\n                <div className=\"relative w-full h-full flex items-center justify-center overflow-hidden rounded-md\">\r\n                  <audio ref={audioRef} src={audioAsset} controls />\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"absolute bottom-3 right-3 p-3 rounded-full bg-red-500 text-xl cursor-pointer outline-none hover:shadow-md  duration-500 transition-all ease-in-out\"\r\n                    onClick={() => {\r\n                      deleteImageObject(audioAsset, \"audio\");\r\n                    }}\r\n                  >\r\n                    <MdDelete className=\"text-white\" />\r\n                  </button>\r\n                </div>\r\n              )}\r\n            </>\r\n          )}\r\n        </div> */}\r\n\r\n        {/* <div className=\"flex items-center justify-end w-full p-4\">\r\n          {isImageLoading || isAudioLoading ? (\r\n            <DisabledButton />\r\n          ) : (\r\n            <motion.button\r\n              whileTap={{ scale: 0.75 }}\r\n              className=\"px-8 py-2 rounded-md text-white bg-red-600 hover:shadow-lg\"\r\n              onClick={saveSong}\r\n            >\r\n              Send\r\n            </motion.button>\r\n          )}\r\n        </div> */}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const PictureLoader = ({ progress }) => {\r\n  return (\r\n    <div className=\"w-full h-full flex flex-col items-center justify-center\">\r\n      <p className=\"text-xl font-semibold text-textColor\">\r\n        {Math.round(progress) > 0 && <>{`${Math.round(progress)}`}</>}\r\n      </p>\r\n      <div className=\"w-20 h-20 min-with-[40px] bg-red-600 animate-ping rounded-full flex items-center \r\n      justify-center relative\">\r\n        <div className=\" absolute inset-0 rounded-full bg-red-600 blur-xl\"></div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DashboardNewSong;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
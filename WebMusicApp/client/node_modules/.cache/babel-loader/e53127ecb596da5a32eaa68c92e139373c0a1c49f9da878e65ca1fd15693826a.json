{"ast":null,"code":"import axios from \"axios\";\nconst baseURL = \"http://localhost:4000/\";\nexport const validateUser = async token => {\n  try {\n    const res = axios.get(`${baseURL}api/users/login`, {\n      headers: {\n        Authorization: \"Bearer \" + token\n      }\n    });\n    return (await res).data;\n  } catch (error) {}\n  ;\n};\nexport const getAllUsers = async () => {\n  try {\n    const res = await axios.get(`${baseURL}api/users/getAll`);\n    return res.data;\n  } catch (error) {\n    return null;\n  }\n};\nexport const getAllArtists = async () => {\n  try {\n    const res = await axios.get(`${baseURL}api/artists/getAll`);\n    return res.data;\n  } catch (error) {\n    return null;\n  }\n};\nexport const getAllSongs = async () => {\n  try {\n    const res = await axios.get(`${baseURL}api/songs/getAll`);\n    return res.data;\n  } catch (error) {\n    return null;\n  }\n};\nexport const getAllAlbums = async () => {\n  try {\n    const res = await axios.get(`${baseURL}api/albums/getAll`);\n    return res.data;\n  } catch (error) {\n    return null;\n  }\n};\nexport const changinUserRole = async (userId, role) => {\n  try {\n    const res = axios.put(`${baseURL}api/users/updateRole/${userId}`, {\n      data: {\n        role: role\n      }\n    });\n    return res;\n  } catch (error) {\n    return null;\n  }\n};\nexport const removeUser = async userId => {\n  try {\n    const res = axios.delete(`${baseURL}api/users/deleteUser/${userId}`);\n    return res;\n  } catch (error) {\n    return null;\n  }\n};\nexport const deleteSongById = async id => {\n  try {\n    const res = axios.delete(`${baseURL}api/songs/delete/${id}`);\n    return res;\n  } catch (error) {\n    return null;\n  }\n};","map":{"version":3,"names":["axios","baseURL","validateUser","token","res","get","headers","Authorization","data","error","getAllUsers","getAllArtists","getAllSongs","getAllAlbums","changinUserRole","userId","role","put","removeUser","delete","deleteSongById","id"],"sources":["D:/Curse/WebMusicApp/client/src/api/index.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst baseURL = \"http://localhost:4000/\";\r\n\r\nexport const validateUser = async (token) => {\r\n    try {\r\n        const res = axios.get(`${baseURL}api/users/login`, {\r\n            headers: {\r\n                Authorization: \"Bearer \" + token,\r\n            }\r\n        });\r\n        return (await res).data;\r\n    }\r\n    catch (error) { };\r\n};\r\n\r\nexport const getAllUsers = async () => {\r\n    try {\r\n        const res = await axios.get(`${baseURL}api/users/getAll`);\r\n        return res.data;\r\n    }\r\n    catch (error) {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport const getAllArtists = async () => {\r\n    try {\r\n        const res = await axios.get(`${baseURL}api/artists/getAll`);\r\n        return res.data;\r\n    } catch (error) {\r\n        return null;\r\n    }\r\n};\r\n\r\nexport const getAllSongs = async () => {\r\n    try {\r\n        const res = await axios.get(`${baseURL}api/songs/getAll`);\r\n        return res.data;\r\n    } catch (error) {\r\n        return null;\r\n    }\r\n};\r\n\r\nexport const getAllAlbums = async () => {\r\n    try {\r\n        const res = await axios.get(`${baseURL}api/albums/getAll`);\r\n        return res.data;\r\n    } catch (error) {\r\n        return null;\r\n    }\r\n};\r\n\r\nexport const changinUserRole = async (userId, role) => {\r\n    try {\r\n        const res = axios.put(`${baseURL}api/users/updateRole/${userId}`, { data: { role: role } })\r\n        return res;\r\n    }\r\n    catch (error) {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport const removeUser = async (userId) => {\r\n    try {\r\n        const res = axios.delete(`${baseURL}api/users/deleteUser/${userId}`)\r\n        return res;\r\n    }\r\n    catch (error) {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport const deleteSongById = async (id) => {\r\n    try {\r\n      const res = axios.delete(`${baseURL}api/songs/delete/${id}`);\r\n      return res;\r\n    } \r\n    catch (error) {\r\n      return null;\r\n    }\r\n  };"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,wBAAwB;AAExC,OAAO,MAAMC,YAAY,GAAG,MAAOC,KAAK,IAAK;EACzC,IAAI;IACA,MAAMC,GAAG,GAAGJ,KAAK,CAACK,GAAG,CAAE,GAAEJ,OAAQ,iBAAgB,EAAE;MAC/CK,OAAO,EAAE;QACLC,aAAa,EAAE,SAAS,GAAGJ;MAC/B;IACJ,CAAC,CAAC;IACF,OAAO,CAAC,MAAMC,GAAG,EAAEI,IAAI;EAC3B,CAAC,CACD,OAAOC,KAAK,EAAE,CAAE;EAAC;AACrB,CAAC;AAED,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;EACnC,IAAI;IACA,MAAMN,GAAG,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAE,GAAEJ,OAAQ,kBAAiB,CAAC;IACzD,OAAOG,GAAG,CAACI,IAAI;EACnB,CAAC,CACD,OAAOC,KAAK,EAAE;IACV,OAAO,IAAI;EACf;AACJ,CAAC;AAED,OAAO,MAAME,aAAa,GAAG,MAAAA,CAAA,KAAY;EACrC,IAAI;IACA,MAAMP,GAAG,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAE,GAAEJ,OAAQ,oBAAmB,CAAC;IAC3D,OAAOG,GAAG,CAACI,IAAI;EACnB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,OAAO,IAAI;EACf;AACJ,CAAC;AAED,OAAO,MAAMG,WAAW,GAAG,MAAAA,CAAA,KAAY;EACnC,IAAI;IACA,MAAMR,GAAG,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAE,GAAEJ,OAAQ,kBAAiB,CAAC;IACzD,OAAOG,GAAG,CAACI,IAAI;EACnB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,OAAO,IAAI;EACf;AACJ,CAAC;AAED,OAAO,MAAMI,YAAY,GAAG,MAAAA,CAAA,KAAY;EACpC,IAAI;IACA,MAAMT,GAAG,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAE,GAAEJ,OAAQ,mBAAkB,CAAC;IAC1D,OAAOG,GAAG,CAACI,IAAI;EACnB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,OAAO,IAAI;EACf;AACJ,CAAC;AAED,OAAO,MAAMK,eAAe,GAAG,MAAAA,CAAOC,MAAM,EAAEC,IAAI,KAAK;EACnD,IAAI;IACA,MAAMZ,GAAG,GAAGJ,KAAK,CAACiB,GAAG,CAAE,GAAEhB,OAAQ,wBAAuBc,MAAO,EAAC,EAAE;MAAEP,IAAI,EAAE;QAAEQ,IAAI,EAAEA;MAAK;IAAE,CAAC,CAAC;IAC3F,OAAOZ,GAAG;EACd,CAAC,CACD,OAAOK,KAAK,EAAE;IACV,OAAO,IAAI;EACf;AACJ,CAAC;AAED,OAAO,MAAMS,UAAU,GAAG,MAAOH,MAAM,IAAK;EACxC,IAAI;IACA,MAAMX,GAAG,GAAGJ,KAAK,CAACmB,MAAM,CAAE,GAAElB,OAAQ,wBAAuBc,MAAO,EAAC,CAAC;IACpE,OAAOX,GAAG;EACd,CAAC,CACD,OAAOK,KAAK,EAAE;IACV,OAAO,IAAI;EACf;AACJ,CAAC;AAED,OAAO,MAAMW,cAAc,GAAG,MAAOC,EAAE,IAAK;EACxC,IAAI;IACF,MAAMjB,GAAG,GAAGJ,KAAK,CAACmB,MAAM,CAAE,GAAElB,OAAQ,oBAAmBoB,EAAG,EAAC,CAAC;IAC5D,OAAOjB,GAAG;EACZ,CAAC,CACD,OAAOK,KAAK,EAAE;IACZ,OAAO,IAAI;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
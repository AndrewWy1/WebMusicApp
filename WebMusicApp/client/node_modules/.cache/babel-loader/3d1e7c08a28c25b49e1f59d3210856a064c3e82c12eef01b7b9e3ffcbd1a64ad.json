{"ast":null,"code":"var _jsxFileName = \"D:\\\\Curse\\\\WebMusicApp\\\\client\\\\src\\\\components\\\\Login.jsx\";\nimport React, { useEffect } from \"react\";\n//import { LoginBg } from \"../assets/video\";\nimport { FcGoogle } from \"react-icons/fc\";\nimport { getAuth, GoogleAuthProvider, signInWithPopup } from \"firebase/auth\";\nimport { app } from \"../config/firebase.cofig\";\n//import { useNavigate } from \"react-router-dom\";\n//import { validateUser } from \"../api\";\n//import { actionType } from \"../Context/reducer\";\n//import { useStateValue } from \"../Context/StateProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  setAuth\n}) => {\n  const firebaseAuth = getAuth(app);\n  const provider = new GoogleAuthProvider();\n  //const navigate = useNavigate();\n  // const [{ user }, dispatch] = useStateValue();\n\n  const loginWithGoogle = async () => {\n    await signInWithPopup(firebaseAuth, provider).then(userCred => {\n      if (userCred) {\n        setAuth(true);\n        window.localStorage.setItem(\"auth\", \"true\");\n        firebaseAuth.onAuthStateChanged(userCred => {\n          if (userCred) {\n            userCred.getIdToken().then(token => {\n              window.localStorage.setItem(\"auth\", \"true\");\n              //validateUser(token).then((data) => {\n              // dispatch({\n              //   type: actionType.SET_USER,\n              //   user: data,\n              // });\n              //});\n            });\n            //navigate(\"/\", { replace: true });\n          } else {\n            setAuth(false);\n            // dispatch({\n            //   type: actionType.SET_USER,\n            //   user: null,\n            // });\n            //navigate(\"/login\");\n          }\n        });\n      }\n    });\n  };\n\n  // useEffect(() => {\n  //   if (window.localStorage.getItem(\"auth\") === \"true\")\n  //     navigate(\"/\", { replace: true });\n  // }, []);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"absolute inset-0 bg-darkOverlay flex items-center justify-center p-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full md:w-375 p-4 bg-lightOverlay shadow-2xl rounded-md backdrop-blur-md flex flex-col items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: loginWithGoogle,\n        className: \"flex items-center justify-center  gap-2 px-4 py-2 rounded-md bg-cardOverlay cursor-pointer\\r hover:bg-card hover:shadow-md duration-100 ease-in-out transition-all\",\n        children: [/*#__PURE__*/_jsxDEV(FcGoogle, {\n          className: \"text-xl\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Signin with Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useEffect","FcGoogle","getAuth","GoogleAuthProvider","signInWithPopup","app","jsxDEV","_jsxDEV","Login","setAuth","firebaseAuth","provider","loginWithGoogle","then","userCred","window","localStorage","setItem","onAuthStateChanged","getIdToken","token","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Curse/WebMusicApp/client/src/components/Login.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\r\n//import { LoginBg } from \"../assets/video\";\r\nimport { FcGoogle } from \"react-icons/fc\";\r\nimport { getAuth, GoogleAuthProvider, signInWithPopup } from \"firebase/auth\";\r\nimport { app } from \"../config/firebase.cofig\";\r\n//import { useNavigate } from \"react-router-dom\";\r\n//import { validateUser } from \"../api\";\r\n//import { actionType } from \"../Context/reducer\";\r\n//import { useStateValue } from \"../Context/StateProvider\";\r\n\r\nconst Login = ({ setAuth }) => {\r\n  const firebaseAuth = getAuth(app);\r\n  const provider = new GoogleAuthProvider();\r\n  //const navigate = useNavigate();\r\n  // const [{ user }, dispatch] = useStateValue();\r\n\r\n  const loginWithGoogle = async () => {\r\n    await signInWithPopup(firebaseAuth, provider).then((userCred) => {\r\n      if (userCred) {\r\n        setAuth(true);\r\n        window.localStorage.setItem(\"auth\", \"true\");\r\n\r\n        firebaseAuth.onAuthStateChanged((userCred) => {\r\n          if (userCred) {\r\n            userCred.getIdToken().then((token) => {\r\n              window.localStorage.setItem(\"auth\", \"true\");\r\n              //validateUser(token).then((data) => {\r\n                // dispatch({\r\n                //   type: actionType.SET_USER,\r\n                //   user: data,\r\n                // });\r\n              //});\r\n            });\r\n            //navigate(\"/\", { replace: true });\r\n          } else {\r\n            setAuth(false);\r\n            // dispatch({\r\n            //   type: actionType.SET_USER,\r\n            //   user: null,\r\n            // });\r\n            //navigate(\"/login\");\r\n          }\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   if (window.localStorage.getItem(\"auth\") === \"true\")\r\n  //     navigate(\"/\", { replace: true });\r\n  // }, []);\r\n\r\n\r\n  return (\r\n    <div className=\"absolute inset-0 bg-darkOverlay flex items-center justify-center p-4\">\r\n      <div className=\"w-full md:w-375 p-4 bg-lightOverlay shadow-2xl rounded-md backdrop-blur-md flex flex-col items-center justify-center\">\r\n        <div\r\n          onClick={loginWithGoogle}\r\n          className=\"flex items-center justify-center  gap-2 px-4 py-2 rounded-md bg-cardOverlay cursor-pointer\r\n           hover:bg-card hover:shadow-md duration-100 ease-in-out transition-all\">\r\n          <FcGoogle className=\"text-xl\" />\r\n          <p>Signin with Google</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n  }\r\n\r\nexport default Login"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC;AACA,SAASC,QAAQ,QAAQ,gBAAgB;AACzC,SAASC,OAAO,EAAEC,kBAAkB,EAAEC,eAAe,QAAQ,eAAe;AAC5E,SAASC,GAAG,QAAQ,0BAA0B;AAC9C;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,KAAK,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAC7B,MAAMC,YAAY,GAAGR,OAAO,CAACG,GAAG,CAAC;EACjC,MAAMM,QAAQ,GAAG,IAAIR,kBAAkB,CAAC,CAAC;EACzC;EACA;;EAEA,MAAMS,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,MAAMR,eAAe,CAACM,YAAY,EAAEC,QAAQ,CAAC,CAACE,IAAI,CAAEC,QAAQ,IAAK;MAC/D,IAAIA,QAAQ,EAAE;QACZL,OAAO,CAAC,IAAI,CAAC;QACbM,MAAM,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAE,MAAM,CAAC;QAE3CP,YAAY,CAACQ,kBAAkB,CAAEJ,QAAQ,IAAK;UAC5C,IAAIA,QAAQ,EAAE;YACZA,QAAQ,CAACK,UAAU,CAAC,CAAC,CAACN,IAAI,CAAEO,KAAK,IAAK;cACpCL,MAAM,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAE,MAAM,CAAC;cAC3C;cACE;cACA;cACA;cACA;cACF;YACF,CAAC,CAAC;YACF;UACF,CAAC,MAAM;YACLR,OAAO,CAAC,KAAK,CAAC;YACd;YACA;YACA;YACA;YACA;UACF;QACF,CAAC,CAAC;MACJ;IACF,CAAC,CAAC;EACJ,CAAC;;EAED;EACA;EACA;EACA;;EAGA,oBACEF,OAAA;IAAKc,SAAS,EAAC,sEAAsE;IAAAC,QAAA,eACnFf,OAAA;MAAKc,SAAS,EAAC,sHAAsH;MAAAC,QAAA,eACnIf,OAAA;QACEgB,OAAO,EAAEX,eAAgB;QACzBS,SAAS,EAAC,oKAC6D;QAAAC,QAAA,gBACvEf,OAAA,CAACN,QAAQ;UAACoB,SAAS,EAAC;QAAS;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAChCpB,OAAA;UAAAe,QAAA,EAAG;QAAkB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAER,CAAC;AAAAC,EAAA,GAxDGpB,KAAK;AA0DX,eAAeA,KAAK;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}